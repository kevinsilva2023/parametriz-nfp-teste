// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Parametriz.AutoNFP.Data.Context;

#nullable disable

namespace Parametriz.AutoNFP.Data.Migrations
{
    [DbContext(typeof(AutoNfpDbContext))]
    [Migration("20251010114249_UsuariosAdministrador")]
    partial class UsuariosAdministrador
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Parametriz.AutoNFP.Domain.Instituicoes.Instituicao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Desativada")
                        .HasColumnType("boolean");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.ToTable("Instituicoes", (string)null);
                });

            modelBuilder.Entity("Parametriz.AutoNFP.Domain.Usuarios.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Administrador")
                        .HasColumnType("boolean");

                    b.Property<bool>("Desativado")
                        .HasColumnType("boolean");

                    b.Property<Guid>("InstituicaoId")
                        .HasColumnType("uuid");

                    b.Property<string>("Nome")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("InstituicaoId", "Nome")
                        .IsUnique();

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("Parametriz.AutoNFP.Domain.Instituicoes.Instituicao", b =>
                {
                    b.OwnsOne("Parametriz.AutoNFP.Domain.Core.ValueObjects.CnpjCpf", "Cnpj", b1 =>
                        {
                            b1.Property<Guid>("InstituicaoId")
                                .HasColumnType("uuid");

                            b1.Property<string>("NumeroInscricao")
                                .IsRequired()
                                .HasMaxLength(14)
                                .HasColumnType("character varying(14)")
                                .HasColumnName("CnpjCpf");

                            b1.Property<int>("TipoPessoa")
                                .HasMaxLength(1)
                                .HasColumnType("integer")
                                .HasColumnName("TipoPessoa")
                                .IsFixedLength();

                            b1.HasKey("InstituicaoId");

                            b1.HasIndex("NumeroInscricao")
                                .IsUnique();

                            b1.ToTable("Instituicoes");

                            b1.WithOwner()
                                .HasForeignKey("InstituicaoId");
                        });

                    b.OwnsOne("Parametriz.AutoNFP.Domain.Core.ValueObjects.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<Guid>("InstituicaoId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Bairro")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("Bairro");

                            b1.Property<string>("CEP")
                                .HasMaxLength(8)
                                .HasColumnType("character(8)")
                                .HasColumnName("CEP")
                                .IsFixedLength();

                            b1.Property<string>("Complemento")
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)")
                                .HasColumnName("Complemento");

                            b1.Property<string>("Logradouro")
                                .HasMaxLength(100)
                                .HasColumnType("character varying(100)")
                                .HasColumnName("Logradouro");

                            b1.Property<string>("Municipio")
                                .HasMaxLength(50)
                                .HasColumnType("character varying(50)")
                                .HasColumnName("Municipio");

                            b1.Property<string>("Numero")
                                .HasMaxLength(10)
                                .HasColumnType("character varying(10)")
                                .HasColumnName("Numero");

                            b1.Property<string>("TipoLogradouro")
                                .IsRequired()
                                .HasMaxLength(15)
                                .HasColumnType("character varying(15)")
                                .HasColumnName("TipoLogradouro");

                            b1.Property<string>("UF")
                                .HasMaxLength(2)
                                .HasColumnType("character(2)")
                                .HasColumnName("UF")
                                .IsFixedLength();

                            b1.HasKey("InstituicaoId");

                            b1.ToTable("Instituicoes");

                            b1.WithOwner()
                                .HasForeignKey("InstituicaoId");
                        });

                    b.Navigation("Cnpj");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Parametriz.AutoNFP.Domain.Usuarios.Usuario", b =>
                {
                    b.HasOne("Parametriz.AutoNFP.Domain.Instituicoes.Instituicao", "Instituicao")
                        .WithMany("Usuarios")
                        .HasForeignKey("InstituicaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("Parametriz.AutoNFP.Domain.Core.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("UsuarioId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Conta")
                                .IsRequired()
                                .HasMaxLength(256)
                                .HasColumnType("character varying(256)")
                                .HasColumnName("Email");

                            b1.HasKey("UsuarioId");

                            b1.HasIndex("Conta")
                                .IsUnique();

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.Navigation("Email");

                    b.Navigation("Instituicao");
                });

            modelBuilder.Entity("Parametriz.AutoNFP.Domain.Instituicoes.Instituicao", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
